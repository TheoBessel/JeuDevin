Vous devez répondre de manière courte aux questions suivantes.
Il n'est pas demandé de modifier le programme que vous avez écrit mais
simplement d'expliquer les modifications qu'il faudrait y apporter.

Il faut remplacer les « ... » par votre réponse en laissant les lignes
blanches avant et après.

--------------------------------------------------------------------------------
C1. Que se passe-t-il si dans Jeu_Devin_Exo2 l'utilisateur répond d'abord trop
grand puis toujours trop petit ?
--------------------------------------------------------------------------------

Réponse : L'ordinateur détecte que l'utilisateur triche


--------------------------------------------------------------------------------
C2. Est-on sûr que Jeu_Devin_Exo1 se termine ?  Quel argument peut-on donner ?
--------------------------------------------------------------------------------

Réponse : Non. Si l'utilisateur fourni incessamment une proposition fausse sans la corriger le programme continue de lui demander une nouvelle proposition et ainsi ne termine jamais.


--------------------------------------------------------------------------------
C3. Est-on sûr que Jeu_Devin_Exo2 se termine ?  Quel argument peut-on donner ?
--------------------------------------------------------------------------------

Réponse : Oui. En effet la quantité Sup-Inf est entière, strictement décroissante et minorée donc l'algorithme se termine quand l'ordinateur a trouvé ou détecté une triche de la part de l'utilisateur.


--------------------------------------------------------------------------------
F1. Les noms Jeu_Devin_Exo1, Jeu_Devin_Exo2 et Jeu_Devin_Exo3 ne sont pas très
parlants.  Par quoi pourrait-on les remplacer ?
--------------------------------------------------------------------------------

Réponse : On peut les remplacer respectivement par Utilisateur_Devine, Machine_Devine et Jeu_Devin.


--------------------------------------------------------------------------------
E1. Quelles sont les modifications à apporter à votre programme pour chercher
des nombres compris entre 1 et 9999 ?
--------------------------------------------------------------------------------

Réponse : Il faut remplacer la valeur de 999 par 9999 dans `Alea(1,999)` et changer les textes dans l'exo1 et il faut remplacer 1000 par 10000 dans `Sup := 1000;` dans l'exo2.
          On pourrait aussi transformer le programme en remplaçant les littéraux par des constantes explicites MIN et MAX.


--------------------------------------------------------------------------------
E2. Quelles sont les modifications à apporter pour que que l'utilisateur
puisse utiliser aussi les caractères <, > et = pour indiquer si le nombre
proposé est trop petit, trop grand ou le bon ?
--------------------------------------------------------------------------------

Réponse : Il faut remplacer `when 'p' | 'P'` par `when 'p' | 'P' | '<'`, et de manière similaire pour > et =


--------------------------------------------------------------------------------
E3. On veut limiter le nombre de tentatives à 10.  Si le nombre n'a pas été
trouvé avant, le joueur a perdu.  Comment prendre en compte cette évolution ?
--------------------------------------------------------------------------------

Réponse : On change la condition `prop = n` de la boucle Jusqu'à du raffinage R1 en `prop = n OU nb_prop = 10`


--------------------------------------------------------------------------------
E4. La recherche dichotomique conduit à toujours proposer les mêmes nombres.
Comment faire pour donner l'impression que le programme joue comme un humain
tout en restant efficace ?
--------------------------------------------------------------------------------

Réponse : ...


--------------------------------------------------------------------------------
E5. Actuellement, l'utilisateur doit attendre la fin d'un jeu pour quitter le
programme.  On veut qu'il puisse le faire dès qu'il saisit 0 quand on lui pose
une question. Le programme doit alors dire que l'utilisateur a abandonné la
partie.  Comment faire ?
--------------------------------------------------------------------------------

Réponse : Dans l'exercice 1, on peut ajouter une variable booléenne qui est initialisé à Faux, vérifiée par la boucle répéter du R1 (qui quitte si ce booléen est à vrai) et 
ajouter un cas supplémentaire dans R2 : Comment "Traiter la proposition du joueur" qui met ce booléen à Vrai si la proposition est 0.


--------------------------------------------------------------------------------
E6. Quand le programme détecte que l'utilisateur a triché, comment faire pour
que le programme explique au joueur quand il a triché ?
--------------------------------------------------------------------------------

Réponse : ...


--------------------------------------------------------------------------------
